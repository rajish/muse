// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package models


case class Actors(actor: Seq[models.ActorType] = Nil,
  modelVersion: String,
  attributes: Map[String, scalaxb.DataRecord[Any]])


case class ActorType(title: String,
  description: models.DescriptionType,
  stereotype: Option[models.ActorStereotypeType] = None,
  any: Seq[scalaxb.DataRecord[Any]] = Nil,
  id: String,
  attributes: Map[String, scalaxb.DataRecord[Any]])

trait ActorStereotypeType

object ActorStereotypeType {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): ActorStereotypeType = value match {
    case "system" => System
    case "person" => Person
    case "other" => Other

  }
}

case object System extends ActorStereotypeType { override def toString = "system" }
case object Person extends ActorStereotypeType { override def toString = "person" }
case object Other extends ActorStereotypeType { override def toString = "other" }

